version: 2.1
orbs:
  ruby: circleci/ruby@1.1.4
  node: circleci/node@4.7.0
  aws-cli: circleci/aws-cli@2.0.3
  aws-ecr: circleci/aws-ecr@7.2.0
  jq: circleci/jq@2.2.0
  slack: circleci/slack@4.4.4

jobs:
  build-deps:
    docker:
      - image: cimg/ruby:3.0.0-node
    steps:
      - checkout

      - run:
          name: Which bundler?
          command: bundle -v
      - run:
          command: bundle config set without test
      - ruby/install-deps

      - run:
          name: Which yarn?
          command: yarn -v
      - node/install-packages:
          pkg-manager: yarn

      - persist_to_workspace:
          root: .
          paths:
            - .

  build-image:
    docker:
      - image: cimg/base:2021.04
    steps:
      - attach_workspace:
          at: .
      - jq/install
      - aws-ecr/build-and-push-image:
          checkout: false
          repo: $ENVIRONMENT-$SITE-snt-apps
          remote-docker-layer-caching: true
          setup-remote-docker: yes
          tag: ${CIRCLE_PROJECT_REPONAME}-${CIRCLE_WORKFLOW_ID}-${CIRCLE_SHA1}${CIRCLE_TAG}

  scan-image:
    docker:
      - image: cimg/base:2021.04
    steps:
      - aws-cli/install
      - run:
          command: |
            get_findings() {
                findings=$(aws ecr describe-image-scan-findings --repository-name $ENVIRONMENT-$SITE-snt-apps --image-id imageTag=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_WORKFLOW_ID}-${CIRCLE_SHA1}${CIRCLE_TAG})
                echo "${findings}" > ecr_scan_findings.json
                status=$(echo "${findings}" | jq -r ".imageScanStatus.status")
                numberOfFindings=$(echo "${findings}" | jq -r ".imageScanFindings.findings | length")
            }

            # Get the results of the scan or wait until they are ready
            get_findings
            while [[ "${status}" == "IN_PROGRESS" ]]; do
                sleep 15
                get_findings
            done

            echo "Findings saved to ecr_scan_findings.json"
            echo

            if [[ "${status}" != *COMPLETE* ]]; then
                echo "Scan does not appear COMPLETE"
                exit 1
            fi

            if [[ "${numberOfFindings}" -gt 0 ]]; then
                echo "Scan found ${numberOfFindings} findings!"
                #exit 1
            fi
      - store_artifacts:
          path: ecr_scan_findings.json

  test:
    docker:
      - image: cimg/ruby:3.0.0
    steps:
      - attach_workspace:
          at: .
      - run:
          command: bundle config set with test
      - ruby/install-deps
      - run:
          command: |
            echo -e "test:\n  mode: backend" > config/mode.yml &&
            bundle exec rake test
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: coverage

  notify:
    docker:
      - image: cimg/base:2021.04
    steps:
      - slack/notify:
          channel: cicd

workflows:
  develop:
    jobs:
      - build-deps
      - test:
          requires:
            - build-deps
      - build-image:
          requires:
            - build-deps
      - scan-image:
          requires:
            - build-image
